@page "/contact/add"
@page "/contact/edit/{Id:int}"
@using BlazorApp.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title Contact</h1>
<hr />
<EditForm Model="@contact" OnValidSubmit="SaveContact">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Firstname" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="contact.FirstName" />
        </div>
        <ValidationMessage For="@(() => contact.FirstName)" />
    </div>
    <div class="mb-3">
        <label for="Lastname" class="form-label">Address</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="contact.LastName" />
        </div>
        <ValidationMessage For="@(() => contact.LastName)" />
    </div>
    <div class="mb-3">
        <label for="Phone" class="form-label">Cell No</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="contact.Phone" />
        </div>
        <ValidationMessage For="@(() => contact.Phone)" />
    </div>
    <div class="mb-3">
        <label for="Email" class="form-label">E-mail</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="contact.Email" />
        </div>
        <ValidationMessage For="@(() => contact.Email)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int Id { get; set; }
    protected string Title = "Add";
    protected Contact contact = new();
    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            Title = "Edit";
            contact = await Http.GetFromJsonAsync<Contact>("api/Contact/" + Id);
        }
    }
    protected async Task SaveContact()
    {
        if (contact.Id != 0)
        {
            await Http.PutAsJsonAsync("api/Contact", contact);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Contact", contact);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchuserdetails");
    }
}